#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WcfService
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="EVENet")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAdmin(Admin instance);
    partial void UpdateAdmin(Admin instance);
    partial void DeleteAdmin(Admin instance);
    partial void InsertUserUser(UserUser instance);
    partial void UpdateUserUser(UserUser instance);
    partial void DeleteUserUser(UserUser instance);
    partial void InsertComment(Comment instance);
    partial void UpdateComment(Comment instance);
    partial void DeleteComment(Comment instance);
    partial void InsertEvent(Event instance);
    partial void UpdateEvent(Event instance);
    partial void DeleteEvent(Event instance);
    partial void InsertEventTag(EventTag instance);
    partial void UpdateEventTag(EventTag instance);
    partial void DeleteEventTag(EventTag instance);
    partial void InsertIndividual(Individual instance);
    partial void UpdateIndividual(Individual instance);
    partial void DeleteIndividual(Individual instance);
    partial void InsertIndividualInterest(IndividualInterest instance);
    partial void UpdateIndividualInterest(IndividualInterest instance);
    partial void DeleteIndividualInterest(IndividualInterest instance);
    partial void InsertInterest(Interest instance);
    partial void UpdateInterest(Interest instance);
    partial void DeleteInterest(Interest instance);
    partial void InsertLocation(Location instance);
    partial void UpdateLocation(Location instance);
    partial void DeleteLocation(Location instance);
    partial void InsertNotification(Notification instance);
    partial void UpdateNotification(Notification instance);
    partial void DeleteNotification(Notification instance);
    partial void InsertOrganization(Organization instance);
    partial void UpdateOrganization(Organization instance);
    partial void DeleteOrganization(Organization instance);
    partial void InsertPhoto(Photo instance);
    partial void UpdatePhoto(Photo instance);
    partial void DeletePhoto(Photo instance);
    partial void InsertTag(Tag instance);
    partial void UpdateTag(Tag instance);
    partial void DeleteTag(Tag instance);
    partial void InsertType(Type instance);
    partial void UpdateType(Type instance);
    partial void DeleteType(Type instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertUserEventAttendant(UserEventAttendant instance);
    partial void UpdateUserEventAttendant(UserEventAttendant instance);
    partial void DeleteUserEventAttendant(UserEventAttendant instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["EVENetConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Admin> Admins
		{
			get
			{
				return this.GetTable<Admin>();
			}
		}
		
		public System.Data.Linq.Table<UserUser> UserUsers
		{
			get
			{
				return this.GetTable<UserUser>();
			}
		}
		
		public System.Data.Linq.Table<Comment> Comments
		{
			get
			{
				return this.GetTable<Comment>();
			}
		}
		
		public System.Data.Linq.Table<Event> Events
		{
			get
			{
				return this.GetTable<Event>();
			}
		}
		
		public System.Data.Linq.Table<EventTag> EventTags
		{
			get
			{
				return this.GetTable<EventTag>();
			}
		}
		
		public System.Data.Linq.Table<Individual> Individuals
		{
			get
			{
				return this.GetTable<Individual>();
			}
		}
		
		public System.Data.Linq.Table<IndividualInterest> IndividualInterests
		{
			get
			{
				return this.GetTable<IndividualInterest>();
			}
		}
		
		public System.Data.Linq.Table<Interest> Interests
		{
			get
			{
				return this.GetTable<Interest>();
			}
		}
		
		public System.Data.Linq.Table<Location> Locations
		{
			get
			{
				return this.GetTable<Location>();
			}
		}
		
		public System.Data.Linq.Table<Notification> Notifications
		{
			get
			{
				return this.GetTable<Notification>();
			}
		}
		
		public System.Data.Linq.Table<Organization> Organizations
		{
			get
			{
				return this.GetTable<Organization>();
			}
		}
		
		public System.Data.Linq.Table<Photo> Photos
		{
			get
			{
				return this.GetTable<Photo>();
			}
		}
		
		public System.Data.Linq.Table<Tag> Tags
		{
			get
			{
				return this.GetTable<Tag>();
			}
		}
		
		public System.Data.Linq.Table<Type> Types
		{
			get
			{
				return this.GetTable<Type>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<UserEventAttendant> UserEventAttendants
		{
			get
			{
				return this.GetTable<UserEventAttendant>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.addComennt")]
		public int addComennt([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> eventId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(32)")] string author, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(1024)")] string content)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), eventId, author, content);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.unfollow")]
		public int unfollow([global::System.Data.Linq.Mapping.ParameterAttribute(Name="this", DbType="VarChar(32)")] string @this, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(32)")] string friend)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), @this, friend);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.attachInterest")]
		public int attachInterest([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(32)")] string username, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(32)")] string interest)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), username, interest);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.attachTag")]
		public int attachTag([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(32)")] string tag, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> eventId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), tag, eventId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.createEvent")]
		public int createEvent([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> beginTime, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> endTime, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(1024)")] string description, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Image")] System.Data.Linq.Binary thumbnail, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(128)")] string title, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> location, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(32)")] string currentUser)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), beginTime, endTime, description, thumbnail, title, location, currentUser);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.createIndividual")]
		public int createIndividual([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(32)")] string username, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(64)")] string password, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Image")] System.Data.Linq.Binary profilePicture, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(16)")] string firstName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(16)")] string midName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(16)")] string lastName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> dob, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> gender)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), username, password, profilePicture, firstName, midName, lastName, dob, gender);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.createInterest")]
		public int createInterest([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(32)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(1024)")] string description, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Image")] System.Data.Linq.Binary thumbnail)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), name, description, thumbnail);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.createLocation")]
		public int createLocation([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(32)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(1024)")] string description, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(64)")] string address, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="long", DbType="Real")] System.Nullable<float> @long, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Real")] System.Nullable<float> lat, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Image")] System.Data.Linq.Binary thumbnail)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), name, description, address, @long, lat, thumbnail);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.createOrganization")]
		public int createOrganization([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(32)")] string username, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(64)")] string password, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Image")] System.Data.Linq.Binary profilePicture, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(1024)")] string description, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(32)")] string type, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(16)")] string phone, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(256)")] string website)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), username, password, profilePicture, description, type, phone, website);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.createRoot")]
		public int createRoot([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(32)")] string username, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(64)")] string password, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Image")] System.Data.Linq.Binary profilePicture)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), username, password, profilePicture);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.createTag")]
		public int createTag([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(32)")] string tagName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), tagName);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.createType")]
		public int createType([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(32)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(32)")] string currentUser)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), name, currentUser);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.createUser")]
		public int createUser([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(32)")] string username, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(64)")] string password, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Image")] System.Data.Linq.Binary profilePicture, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> userType)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), username, password, profilePicture, userType);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.decreaseTagOccurence")]
		public int decreaseTagOccurence([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(32)")] string tagName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), tagName);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.deleteComment")]
		public int deleteComment([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(32)")] string currentUser, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> commentId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), currentUser, commentId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.deleteEvent")]
		public int deleteEvent([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(32)")] string username)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, username);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.deleteInterest")]
		public int deleteInterest([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(32)")] string name)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), name);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.detachTag")]
		public int detachTag([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(32)")] string tag, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> eventId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), tag, eventId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.dettachInterest")]
		public int dettachInterest([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(32)")] string username, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(32)")] string interest)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), username, interest);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.disinvite")]
		public int disinvite([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> eventId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(32)")] string username)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), eventId, username);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.editLocation")]
		public int editLocation([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> eventId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> newLocation)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), eventId, newLocation);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.follow")]
		public int follow([global::System.Data.Linq.Mapping.ParameterAttribute(Name="this", DbType="VarChar(32)")] string @this, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(32)")] string friend)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), @this, friend);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.followerList")]
		public ISingleResult<followerListResult> followerList([global::System.Data.Linq.Mapping.ParameterAttribute(Name="this", DbType="VarChar(32)")] string @this)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), @this);
			return ((ISingleResult<followerListResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.followingList")]
		public ISingleResult<followingListResult> followingList([global::System.Data.Linq.Mapping.ParameterAttribute(Name="this", DbType="VarChar(32)")] string @this)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), @this);
			return ((ISingleResult<followingListResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.getComments")]
		public ISingleResult<getCommentsResult> getComments([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> eventId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), eventId);
			return ((ISingleResult<getCommentsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.getInterest")]
		public ISingleResult<getInterestResult> getInterest([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(32)")] string name)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), name);
			return ((ISingleResult<getInterestResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.increaseTagOccurence")]
		public int increaseTagOccurence([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(32)")] string tagName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), tagName);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.invite")]
		public int invite([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> eventId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(32)")] string username)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), eventId, username);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.listInvitedEvents")]
		public ISingleResult<listInvitedEventsResult> listInvitedEvents([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(32)")] string user, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> status)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), user, status);
			return ((ISingleResult<listInvitedEventsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.listInvitedPeople")]
		public ISingleResult<listInvitedPeopleResult> listInvitedPeople([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> eventId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> status)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), eventId, status);
			return ((ISingleResult<listInvitedPeopleResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.respondInvitation")]
		public int respondInvitation([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(32)")] string user, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="event", DbType="Int")] System.Nullable<int> @event, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> decision)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), user, @event, decision);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.searchInterestFromName")]
		public ISingleResult<searchInterestFromNameResult> searchInterestFromName([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(32)")] string name)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), name);
			return ((ISingleResult<searchInterestFromNameResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.searchTopTags")]
		public ISingleResult<searchTopTagsResult> searchTopTags([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(32)")] string tagName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> n)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), tagName, n);
			return ((ISingleResult<searchTopTagsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.searchUserFromInterest")]
		public ISingleResult<searchUserFromInterestResult> searchUserFromInterest([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(32)")] string interest)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), interest);
			return ((ISingleResult<searchUserFromInterestResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.setEvent")]
		public int setEvent([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(32)")] string username, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> begintime, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> endtime, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(1024)")] string description, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Image")] System.Data.Linq.Binary thumbnail, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(128)")] string title, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> location)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, username, begintime, endtime, description, thumbnail, title, location);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.setPassword")]
		public int setPassword([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(32)")] string username, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(64)")] string oldPassword, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(64)")] string newPassword)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), username, oldPassword, newPassword);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.setProfilePicture")]
		public int setProfilePicture([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(32)")] string username, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Image")] System.Data.Linq.Binary image)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), username, image);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.auth", IsComposable=true)]
		public System.Nullable<bool> auth([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(32)")] string username, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(64)")] string password)
		{
			return ((System.Nullable<bool>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), username, password).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.isUserExisted", IsComposable=true)]
		public System.Nullable<bool> isUserExisted([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(32)")] string username)
		{
			return ((System.Nullable<bool>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), username).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.isAdmin", IsComposable=true)]
		public System.Nullable<bool> isAdmin([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(32)")] string username)
		{
			return ((System.Nullable<bool>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), username).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.isCommentAuthor", IsComposable=true)]
		public System.Nullable<bool> isCommentAuthor([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(32)")] string username, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> commentId)
		{
			return ((System.Nullable<bool>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), username, commentId).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.isFollowing", IsComposable=true)]
		public System.Nullable<bool> isFollowing([global::System.Data.Linq.Mapping.ParameterAttribute(Name="this", DbType="VarChar(32)")] string @this, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(32)")] string that)
		{
			return ((System.Nullable<bool>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), @this, that).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.isHost", IsComposable=true)]
		public System.Nullable<bool> isHost([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(32)")] string username, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> eventId)
		{
			return ((System.Nullable<bool>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), username, eventId).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.isIndividual", IsComposable=true)]
		public System.Nullable<bool> isIndividual([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(32)")] string username)
		{
			return ((System.Nullable<bool>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), username).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.isTagExisted", IsComposable=true)]
		public System.Nullable<bool> isTagExisted([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(32)")] string tagName)
		{
			return ((System.Nullable<bool>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), tagName).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.isTypeExisted", IsComposable=true)]
		public System.Nullable<bool> isTypeExisted([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(32)")] string name)
		{
			return ((System.Nullable<bool>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), name).ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Admin")]
	public partial class Admin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _username;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    #endregion
		
		public Admin()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Admin", Storage="_User", ThisKey="username", OtherKey="username", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Admin = null;
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Admin = this;
						this._username = value.username;
					}
					else
					{
						this._username = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserUser")]
	public partial class UserUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _username1;
		
		private string _username2;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onusername1Changing(string value);
    partial void Onusername1Changed();
    partial void Onusername2Changing(string value);
    partial void Onusername2Changed();
    #endregion
		
		public UserUser()
		{
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username1", DbType="VarChar(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string username1
		{
			get
			{
				return this._username1;
			}
			set
			{
				if ((this._username1 != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onusername1Changing(value);
					this.SendPropertyChanging();
					this._username1 = value;
					this.SendPropertyChanged("username1");
					this.Onusername1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username2", DbType="VarChar(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string username2
		{
			get
			{
				return this._username2;
			}
			set
			{
				if ((this._username2 != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onusername2Changing(value);
					this.SendPropertyChanging();
					this._username2 = value;
					this.SendPropertyChanged("username2");
					this.Onusername2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserUser", Storage="_User", ThisKey="username1", OtherKey="username", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserUsers.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserUsers.Add(this);
						this._username1 = value.username;
					}
					else
					{
						this._username1 = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserUser1", Storage="_User1", ThisKey="username2", OtherKey="username", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.UserUsers1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.UserUsers1.Add(this);
						this._username2 = value.username;
					}
					else
					{
						this._username2 = default(string);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Comment")]
	public partial class Comment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _content;
		
		private System.Nullable<int> _eventId;
		
		private string _author;
		
		private EntityRef<Event> _Event;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncontentChanging(string value);
    partial void OncontentChanged();
    partial void OneventIdChanging(System.Nullable<int> value);
    partial void OneventIdChanged();
    partial void OnauthorChanging(string value);
    partial void OnauthorChanged();
    #endregion
		
		public Comment()
		{
			this._Event = default(EntityRef<Event>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_content", DbType="NVarChar(1024) NOT NULL", CanBeNull=false)]
		public string content
		{
			get
			{
				return this._content;
			}
			set
			{
				if ((this._content != value))
				{
					this.OncontentChanging(value);
					this.SendPropertyChanging();
					this._content = value;
					this.SendPropertyChanged("content");
					this.OncontentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eventId", DbType="Int")]
		public System.Nullable<int> eventId
		{
			get
			{
				return this._eventId;
			}
			set
			{
				if ((this._eventId != value))
				{
					if (this._Event.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OneventIdChanging(value);
					this.SendPropertyChanging();
					this._eventId = value;
					this.SendPropertyChanged("eventId");
					this.OneventIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_author", DbType="VarChar(32)")]
		public string author
		{
			get
			{
				return this._author;
			}
			set
			{
				if ((this._author != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnauthorChanging(value);
					this.SendPropertyChanging();
					this._author = value;
					this.SendPropertyChanged("author");
					this.OnauthorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Event_Comment", Storage="_Event", ThisKey="eventId", OtherKey="id", IsForeignKey=true)]
		public Event Event
		{
			get
			{
				return this._Event.Entity;
			}
			set
			{
				Event previousValue = this._Event.Entity;
				if (((previousValue != value) 
							|| (this._Event.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Event.Entity = null;
						previousValue.Comments.Remove(this);
					}
					this._Event.Entity = value;
					if ((value != null))
					{
						value.Comments.Add(this);
						this._eventId = value.id;
					}
					else
					{
						this._eventId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Event");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Comment", Storage="_User", ThisKey="author", OtherKey="username", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Comments.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Comments.Add(this);
						this._author = value.username;
					}
					else
					{
						this._author = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Event")]
	public partial class Event : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.DateTime _beginTime;
		
		private System.DateTime _endTime;
		
		private string _description;
		
		private System.Data.Linq.Binary _thumbnail;
		
		private string _title;
		
		private int _location;
		
		private string _username;
		
		private System.Nullable<System.DateTime> _publishDate;
		
		private EntitySet<Comment> _Comments;
		
		private EntitySet<EventTag> _EventTags;
		
		private EntitySet<Notification> _Notifications;
		
		private EntitySet<Photo> _Photos;
		
		private EntitySet<UserEventAttendant> _UserEventAttendants;
		
		private EntityRef<Location> _Location1;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnbeginTimeChanging(System.DateTime value);
    partial void OnbeginTimeChanged();
    partial void OnendTimeChanging(System.DateTime value);
    partial void OnendTimeChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnthumbnailChanging(System.Data.Linq.Binary value);
    partial void OnthumbnailChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OnlocationChanging(int value);
    partial void OnlocationChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpublishDateChanging(System.Nullable<System.DateTime> value);
    partial void OnpublishDateChanged();
    #endregion
		
		public Event()
		{
			this._Comments = new EntitySet<Comment>(new Action<Comment>(this.attach_Comments), new Action<Comment>(this.detach_Comments));
			this._EventTags = new EntitySet<EventTag>(new Action<EventTag>(this.attach_EventTags), new Action<EventTag>(this.detach_EventTags));
			this._Notifications = new EntitySet<Notification>(new Action<Notification>(this.attach_Notifications), new Action<Notification>(this.detach_Notifications));
			this._Photos = new EntitySet<Photo>(new Action<Photo>(this.attach_Photos), new Action<Photo>(this.detach_Photos));
			this._UserEventAttendants = new EntitySet<UserEventAttendant>(new Action<UserEventAttendant>(this.attach_UserEventAttendants), new Action<UserEventAttendant>(this.detach_UserEventAttendants));
			this._Location1 = default(EntityRef<Location>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_beginTime", DbType="DateTime NOT NULL")]
		public System.DateTime beginTime
		{
			get
			{
				return this._beginTime;
			}
			set
			{
				if ((this._beginTime != value))
				{
					this.OnbeginTimeChanging(value);
					this.SendPropertyChanging();
					this._beginTime = value;
					this.SendPropertyChanged("beginTime");
					this.OnbeginTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_endTime", DbType="DateTime NOT NULL")]
		public System.DateTime endTime
		{
			get
			{
				return this._endTime;
			}
			set
			{
				if ((this._endTime != value))
				{
					this.OnendTimeChanging(value);
					this.SendPropertyChanging();
					this._endTime = value;
					this.SendPropertyChanged("endTime");
					this.OnendTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(1024) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_thumbnail", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary thumbnail
		{
			get
			{
				return this._thumbnail;
			}
			set
			{
				if ((this._thumbnail != value))
				{
					this.OnthumbnailChanging(value);
					this.SendPropertyChanging();
					this._thumbnail = value;
					this.SendPropertyChanged("thumbnail");
					this.OnthumbnailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_location", DbType="Int NOT NULL")]
		public int location
		{
			get
			{
				return this._location;
			}
			set
			{
				if ((this._location != value))
				{
					if (this._Location1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnlocationChanging(value);
					this.SendPropertyChanging();
					this._location = value;
					this.SendPropertyChanged("location");
					this.OnlocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_publishDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> publishDate
		{
			get
			{
				return this._publishDate;
			}
			set
			{
				if ((this._publishDate != value))
				{
					this.OnpublishDateChanging(value);
					this.SendPropertyChanging();
					this._publishDate = value;
					this.SendPropertyChanged("publishDate");
					this.OnpublishDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Event_Comment", Storage="_Comments", ThisKey="id", OtherKey="eventId")]
		public EntitySet<Comment> Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				this._Comments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Event_EventTag", Storage="_EventTags", ThisKey="id", OtherKey="event")]
		public EntitySet<EventTag> EventTags
		{
			get
			{
				return this._EventTags;
			}
			set
			{
				this._EventTags.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Event_Notification", Storage="_Notifications", ThisKey="id", OtherKey="eventId")]
		public EntitySet<Notification> Notifications
		{
			get
			{
				return this._Notifications;
			}
			set
			{
				this._Notifications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Event_Photo", Storage="_Photos", ThisKey="id", OtherKey="eventId")]
		public EntitySet<Photo> Photos
		{
			get
			{
				return this._Photos;
			}
			set
			{
				this._Photos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Event_UserEventAttendant", Storage="_UserEventAttendants", ThisKey="id", OtherKey="event")]
		public EntitySet<UserEventAttendant> UserEventAttendants
		{
			get
			{
				return this._UserEventAttendants;
			}
			set
			{
				this._UserEventAttendants.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_Event", Storage="_Location1", ThisKey="location", OtherKey="id", IsForeignKey=true)]
		public Location Location1
		{
			get
			{
				return this._Location1.Entity;
			}
			set
			{
				Location previousValue = this._Location1.Entity;
				if (((previousValue != value) 
							|| (this._Location1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Location1.Entity = null;
						previousValue.Events.Remove(this);
					}
					this._Location1.Entity = value;
					if ((value != null))
					{
						value.Events.Add(this);
						this._location = value.id;
					}
					else
					{
						this._location = default(int);
					}
					this.SendPropertyChanged("Location1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Event", Storage="_User", ThisKey="username", OtherKey="username", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Events.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Events.Add(this);
						this._username = value.username;
					}
					else
					{
						this._username = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Comments(Comment entity)
		{
			this.SendPropertyChanging();
			entity.Event = this;
		}
		
		private void detach_Comments(Comment entity)
		{
			this.SendPropertyChanging();
			entity.Event = null;
		}
		
		private void attach_EventTags(EventTag entity)
		{
			this.SendPropertyChanging();
			entity.Event1 = this;
		}
		
		private void detach_EventTags(EventTag entity)
		{
			this.SendPropertyChanging();
			entity.Event1 = null;
		}
		
		private void attach_Notifications(Notification entity)
		{
			this.SendPropertyChanging();
			entity.Event = this;
		}
		
		private void detach_Notifications(Notification entity)
		{
			this.SendPropertyChanging();
			entity.Event = null;
		}
		
		private void attach_Photos(Photo entity)
		{
			this.SendPropertyChanging();
			entity.Event = this;
		}
		
		private void detach_Photos(Photo entity)
		{
			this.SendPropertyChanging();
			entity.Event = null;
		}
		
		private void attach_UserEventAttendants(UserEventAttendant entity)
		{
			this.SendPropertyChanging();
			entity.Event1 = this;
		}
		
		private void detach_UserEventAttendants(UserEventAttendant entity)
		{
			this.SendPropertyChanging();
			entity.Event1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EventTag")]
	public partial class EventTag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _event;
		
		private string _tag;
		
		private EntityRef<Event> _Event1;
		
		private EntityRef<Tag> _Tag1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OneventChanging(int value);
    partial void OneventChanged();
    partial void OntagChanging(string value);
    partial void OntagChanged();
    #endregion
		
		public EventTag()
		{
			this._Event1 = default(EntityRef<Event>);
			this._Tag1 = default(EntityRef<Tag>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="event", Storage="_event", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int @event
		{
			get
			{
				return this._event;
			}
			set
			{
				if ((this._event != value))
				{
					if (this._Event1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OneventChanging(value);
					this.SendPropertyChanging();
					this._event = value;
					this.SendPropertyChanged("@event");
					this.OneventChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tag", DbType="VarChar(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string tag
		{
			get
			{
				return this._tag;
			}
			set
			{
				if ((this._tag != value))
				{
					if (this._Tag1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OntagChanging(value);
					this.SendPropertyChanging();
					this._tag = value;
					this.SendPropertyChanged("tag");
					this.OntagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Event_EventTag", Storage="_Event1", ThisKey="event", OtherKey="id", IsForeignKey=true)]
		public Event Event1
		{
			get
			{
				return this._Event1.Entity;
			}
			set
			{
				Event previousValue = this._Event1.Entity;
				if (((previousValue != value) 
							|| (this._Event1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Event1.Entity = null;
						previousValue.EventTags.Remove(this);
					}
					this._Event1.Entity = value;
					if ((value != null))
					{
						value.EventTags.Add(this);
						this._event = value.id;
					}
					else
					{
						this._event = default(int);
					}
					this.SendPropertyChanged("Event1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tag_EventTag", Storage="_Tag1", ThisKey="tag", OtherKey="id", IsForeignKey=true)]
		public Tag Tag1
		{
			get
			{
				return this._Tag1.Entity;
			}
			set
			{
				Tag previousValue = this._Tag1.Entity;
				if (((previousValue != value) 
							|| (this._Tag1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tag1.Entity = null;
						previousValue.EventTags.Remove(this);
					}
					this._Tag1.Entity = value;
					if ((value != null))
					{
						value.EventTags.Add(this);
						this._tag = value.id;
					}
					else
					{
						this._tag = default(string);
					}
					this.SendPropertyChanged("Tag1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Individual")]
	public partial class Individual : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _username;
		
		private string _firstName;
		
		private string _midName;
		
		private string _lastName;
		
		private System.DateTime _DOB;
		
		private bool _gender;
		
		private EntitySet<IndividualInterest> _IndividualInterests;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnfirstNameChanging(string value);
    partial void OnfirstNameChanged();
    partial void OnmidNameChanging(string value);
    partial void OnmidNameChanged();
    partial void OnlastNameChanging(string value);
    partial void OnlastNameChanged();
    partial void OnDOBChanging(System.DateTime value);
    partial void OnDOBChanged();
    partial void OngenderChanging(bool value);
    partial void OngenderChanged();
    #endregion
		
		public Individual()
		{
			this._IndividualInterests = new EntitySet<IndividualInterest>(new Action<IndividualInterest>(this.attach_IndividualInterests), new Action<IndividualInterest>(this.detach_IndividualInterests));
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firstName", DbType="NVarChar(16) NOT NULL", CanBeNull=false)]
		public string firstName
		{
			get
			{
				return this._firstName;
			}
			set
			{
				if ((this._firstName != value))
				{
					this.OnfirstNameChanging(value);
					this.SendPropertyChanging();
					this._firstName = value;
					this.SendPropertyChanged("firstName");
					this.OnfirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_midName", DbType="NVarChar(16)")]
		public string midName
		{
			get
			{
				return this._midName;
			}
			set
			{
				if ((this._midName != value))
				{
					this.OnmidNameChanging(value);
					this.SendPropertyChanging();
					this._midName = value;
					this.SendPropertyChanged("midName");
					this.OnmidNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastName", DbType="NVarChar(16) NOT NULL", CanBeNull=false)]
		public string lastName
		{
			get
			{
				return this._lastName;
			}
			set
			{
				if ((this._lastName != value))
				{
					this.OnlastNameChanging(value);
					this.SendPropertyChanging();
					this._lastName = value;
					this.SendPropertyChanged("lastName");
					this.OnlastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOB", DbType="Date NOT NULL")]
		public System.DateTime DOB
		{
			get
			{
				return this._DOB;
			}
			set
			{
				if ((this._DOB != value))
				{
					this.OnDOBChanging(value);
					this.SendPropertyChanging();
					this._DOB = value;
					this.SendPropertyChanged("DOB");
					this.OnDOBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gender", DbType="Bit NOT NULL")]
		public bool gender
		{
			get
			{
				return this._gender;
			}
			set
			{
				if ((this._gender != value))
				{
					this.OngenderChanging(value);
					this.SendPropertyChanging();
					this._gender = value;
					this.SendPropertyChanged("gender");
					this.OngenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Individual_IndividualInterest", Storage="_IndividualInterests", ThisKey="username", OtherKey="username")]
		public EntitySet<IndividualInterest> IndividualInterests
		{
			get
			{
				return this._IndividualInterests;
			}
			set
			{
				this._IndividualInterests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Individual", Storage="_User", ThisKey="username", OtherKey="username", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Individual = null;
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Individual = this;
						this._username = value.username;
					}
					else
					{
						this._username = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_IndividualInterests(IndividualInterest entity)
		{
			this.SendPropertyChanging();
			entity.Individual = this;
		}
		
		private void detach_IndividualInterests(IndividualInterest entity)
		{
			this.SendPropertyChanging();
			entity.Individual = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IndividualInterest")]
	public partial class IndividualInterest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _username;
		
		private string _interest;
		
		private EntityRef<Individual> _Individual;
		
		private EntityRef<Interest> _Interest1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OninterestChanging(string value);
    partial void OninterestChanged();
    #endregion
		
		public IndividualInterest()
		{
			this._Individual = default(EntityRef<Individual>);
			this._Interest1 = default(EntityRef<Interest>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					if (this._Individual.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_interest", DbType="NVarChar(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string interest
		{
			get
			{
				return this._interest;
			}
			set
			{
				if ((this._interest != value))
				{
					if (this._Interest1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OninterestChanging(value);
					this.SendPropertyChanging();
					this._interest = value;
					this.SendPropertyChanged("interest");
					this.OninterestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Individual_IndividualInterest", Storage="_Individual", ThisKey="username", OtherKey="username", IsForeignKey=true)]
		public Individual Individual
		{
			get
			{
				return this._Individual.Entity;
			}
			set
			{
				Individual previousValue = this._Individual.Entity;
				if (((previousValue != value) 
							|| (this._Individual.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Individual.Entity = null;
						previousValue.IndividualInterests.Remove(this);
					}
					this._Individual.Entity = value;
					if ((value != null))
					{
						value.IndividualInterests.Add(this);
						this._username = value.username;
					}
					else
					{
						this._username = default(string);
					}
					this.SendPropertyChanged("Individual");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Interest_IndividualInterest", Storage="_Interest1", ThisKey="interest", OtherKey="name", IsForeignKey=true)]
		public Interest Interest1
		{
			get
			{
				return this._Interest1.Entity;
			}
			set
			{
				Interest previousValue = this._Interest1.Entity;
				if (((previousValue != value) 
							|| (this._Interest1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Interest1.Entity = null;
						previousValue.IndividualInterests.Remove(this);
					}
					this._Interest1.Entity = value;
					if ((value != null))
					{
						value.IndividualInterests.Add(this);
						this._interest = value.name;
					}
					else
					{
						this._interest = default(string);
					}
					this.SendPropertyChanged("Interest1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Interest")]
	public partial class Interest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _name;
		
		private string _description;
		
		private System.Data.Linq.Binary _thumbnail;
		
		private EntitySet<IndividualInterest> _IndividualInterests;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnthumbnailChanging(System.Data.Linq.Binary value);
    partial void OnthumbnailChanged();
    #endregion
		
		public Interest()
		{
			this._IndividualInterests = new EntitySet<IndividualInterest>(new Action<IndividualInterest>(this.attach_IndividualInterests), new Action<IndividualInterest>(this.detach_IndividualInterests));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(1024)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_thumbnail", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary thumbnail
		{
			get
			{
				return this._thumbnail;
			}
			set
			{
				if ((this._thumbnail != value))
				{
					this.OnthumbnailChanging(value);
					this.SendPropertyChanging();
					this._thumbnail = value;
					this.SendPropertyChanged("thumbnail");
					this.OnthumbnailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Interest_IndividualInterest", Storage="_IndividualInterests", ThisKey="name", OtherKey="interest")]
		public EntitySet<IndividualInterest> IndividualInterests
		{
			get
			{
				return this._IndividualInterests;
			}
			set
			{
				this._IndividualInterests.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_IndividualInterests(IndividualInterest entity)
		{
			this.SendPropertyChanging();
			entity.Interest1 = this;
		}
		
		private void detach_IndividualInterests(IndividualInterest entity)
		{
			this.SendPropertyChanging();
			entity.Interest1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Location")]
	public partial class Location : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _description;
		
		private string _address;
		
		private System.Nullable<float> _longitude;
		
		private System.Nullable<float> _latitude;
		
		private System.Data.Linq.Binary _thumbnail;
		
		private EntitySet<Event> _Events;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OnlongitudeChanging(System.Nullable<float> value);
    partial void OnlongitudeChanged();
    partial void OnlatitudeChanging(System.Nullable<float> value);
    partial void OnlatitudeChanged();
    partial void OnthumbnailChanging(System.Data.Linq.Binary value);
    partial void OnthumbnailChanged();
    #endregion
		
		public Location()
		{
			this._Events = new EntitySet<Event>(new Action<Event>(this.attach_Events), new Action<Event>(this.detach_Events));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(32) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(1024)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_longitude", DbType="Real")]
		public System.Nullable<float> longitude
		{
			get
			{
				return this._longitude;
			}
			set
			{
				if ((this._longitude != value))
				{
					this.OnlongitudeChanging(value);
					this.SendPropertyChanging();
					this._longitude = value;
					this.SendPropertyChanged("longitude");
					this.OnlongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_latitude", DbType="Real")]
		public System.Nullable<float> latitude
		{
			get
			{
				return this._latitude;
			}
			set
			{
				if ((this._latitude != value))
				{
					this.OnlatitudeChanging(value);
					this.SendPropertyChanging();
					this._latitude = value;
					this.SendPropertyChanged("latitude");
					this.OnlatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_thumbnail", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary thumbnail
		{
			get
			{
				return this._thumbnail;
			}
			set
			{
				if ((this._thumbnail != value))
				{
					this.OnthumbnailChanging(value);
					this.SendPropertyChanging();
					this._thumbnail = value;
					this.SendPropertyChanged("thumbnail");
					this.OnthumbnailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_Event", Storage="_Events", ThisKey="id", OtherKey="location")]
		public EntitySet<Event> Events
		{
			get
			{
				return this._Events;
			}
			set
			{
				this._Events.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Events(Event entity)
		{
			this.SendPropertyChanging();
			entity.Location1 = this;
		}
		
		private void detach_Events(Event entity)
		{
			this.SendPropertyChanging();
			entity.Location1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Notification")]
	public partial class Notification : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _receiver;
		
		private string _sender;
		
		private System.Nullable<int> _eventId;
		
		private System.Nullable<int> _typeInfo;
		
		private System.Nullable<bool> _Seen;
		
		private System.Nullable<System.DateTime> _timeSent;
		
		private EntityRef<Event> _Event;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnreceiverChanging(string value);
    partial void OnreceiverChanged();
    partial void OnsenderChanging(string value);
    partial void OnsenderChanged();
    partial void OneventIdChanging(System.Nullable<int> value);
    partial void OneventIdChanged();
    partial void OntypeInfoChanging(System.Nullable<int> value);
    partial void OntypeInfoChanged();
    partial void OnSeenChanging(System.Nullable<bool> value);
    partial void OnSeenChanged();
    partial void OntimeSentChanging(System.Nullable<System.DateTime> value);
    partial void OntimeSentChanged();
    #endregion
		
		public Notification()
		{
			this._Event = default(EntityRef<Event>);
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_receiver", DbType="VarChar(32)")]
		public string receiver
		{
			get
			{
				return this._receiver;
			}
			set
			{
				if ((this._receiver != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnreceiverChanging(value);
					this.SendPropertyChanging();
					this._receiver = value;
					this.SendPropertyChanged("receiver");
					this.OnreceiverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sender", DbType="VarChar(32)")]
		public string sender
		{
			get
			{
				return this._sender;
			}
			set
			{
				if ((this._sender != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsenderChanging(value);
					this.SendPropertyChanging();
					this._sender = value;
					this.SendPropertyChanged("sender");
					this.OnsenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eventId", DbType="Int")]
		public System.Nullable<int> eventId
		{
			get
			{
				return this._eventId;
			}
			set
			{
				if ((this._eventId != value))
				{
					if (this._Event.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OneventIdChanging(value);
					this.SendPropertyChanging();
					this._eventId = value;
					this.SendPropertyChanged("eventId");
					this.OneventIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typeInfo", DbType="Int")]
		public System.Nullable<int> typeInfo
		{
			get
			{
				return this._typeInfo;
			}
			set
			{
				if ((this._typeInfo != value))
				{
					this.OntypeInfoChanging(value);
					this.SendPropertyChanging();
					this._typeInfo = value;
					this.SendPropertyChanged("typeInfo");
					this.OntypeInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Seen", DbType="Bit")]
		public System.Nullable<bool> Seen
		{
			get
			{
				return this._Seen;
			}
			set
			{
				if ((this._Seen != value))
				{
					this.OnSeenChanging(value);
					this.SendPropertyChanging();
					this._Seen = value;
					this.SendPropertyChanged("Seen");
					this.OnSeenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timeSent", DbType="DateTime")]
		public System.Nullable<System.DateTime> timeSent
		{
			get
			{
				return this._timeSent;
			}
			set
			{
				if ((this._timeSent != value))
				{
					this.OntimeSentChanging(value);
					this.SendPropertyChanging();
					this._timeSent = value;
					this.SendPropertyChanged("timeSent");
					this.OntimeSentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Event_Notification", Storage="_Event", ThisKey="eventId", OtherKey="id", IsForeignKey=true)]
		public Event Event
		{
			get
			{
				return this._Event.Entity;
			}
			set
			{
				Event previousValue = this._Event.Entity;
				if (((previousValue != value) 
							|| (this._Event.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Event.Entity = null;
						previousValue.Notifications.Remove(this);
					}
					this._Event.Entity = value;
					if ((value != null))
					{
						value.Notifications.Add(this);
						this._eventId = value.id;
					}
					else
					{
						this._eventId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Event");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Notification", Storage="_User", ThisKey="receiver", OtherKey="username", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Notifications.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Notifications.Add(this);
						this._receiver = value.username;
					}
					else
					{
						this._receiver = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Notification1", Storage="_User1", ThisKey="sender", OtherKey="username", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.Notifications1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.Notifications1.Add(this);
						this._sender = value.username;
					}
					else
					{
						this._sender = default(string);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Organization")]
	public partial class Organization : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _username;
		
		private string _description;
		
		private string _type;
		
		private string _phone;
		
		private string _website;
		
		private EntityRef<Type> _Type1;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OnwebsiteChanging(string value);
    partial void OnwebsiteChanged();
    #endregion
		
		public Organization()
		{
			this._Type1 = default(EntityRef<Type>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="NVarChar(32) NOT NULL", CanBeNull=false)]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					if (this._Type1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="VarChar(16)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_website", DbType="VarChar(256)")]
		public string website
		{
			get
			{
				return this._website;
			}
			set
			{
				if ((this._website != value))
				{
					this.OnwebsiteChanging(value);
					this.SendPropertyChanging();
					this._website = value;
					this.SendPropertyChanged("website");
					this.OnwebsiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Type_Organization", Storage="_Type1", ThisKey="type", OtherKey="name", IsForeignKey=true)]
		public Type Type1
		{
			get
			{
				return this._Type1.Entity;
			}
			set
			{
				Type previousValue = this._Type1.Entity;
				if (((previousValue != value) 
							|| (this._Type1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Type1.Entity = null;
						previousValue.Organizations.Remove(this);
					}
					this._Type1.Entity = value;
					if ((value != null))
					{
						value.Organizations.Add(this);
						this._type = value.name;
					}
					else
					{
						this._type = default(string);
					}
					this.SendPropertyChanged("Type1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Organization", Storage="_User", ThisKey="username", OtherKey="username", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Organization = null;
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Organization = this;
						this._username = value.username;
					}
					else
					{
						this._username = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Photo")]
	public partial class Photo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _eventId;
		
		private int _order;
		
		private System.Data.Linq.Binary _data;
		
		private EntityRef<Event> _Event;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OneventIdChanging(int value);
    partial void OneventIdChanged();
    partial void OnorderChanging(int value);
    partial void OnorderChanged();
    partial void OndataChanging(System.Data.Linq.Binary value);
    partial void OndataChanged();
    #endregion
		
		public Photo()
		{
			this._Event = default(EntityRef<Event>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eventId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int eventId
		{
			get
			{
				return this._eventId;
			}
			set
			{
				if ((this._eventId != value))
				{
					if (this._Event.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OneventIdChanging(value);
					this.SendPropertyChanging();
					this._eventId = value;
					this.SendPropertyChanged("eventId");
					this.OneventIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[order]", Storage="_order", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int order
		{
			get
			{
				return this._order;
			}
			set
			{
				if ((this._order != value))
				{
					this.OnorderChanging(value);
					this.SendPropertyChanging();
					this._order = value;
					this.SendPropertyChanged("order");
					this.OnorderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary data
		{
			get
			{
				return this._data;
			}
			set
			{
				if ((this._data != value))
				{
					this.OndataChanging(value);
					this.SendPropertyChanging();
					this._data = value;
					this.SendPropertyChanged("data");
					this.OndataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Event_Photo", Storage="_Event", ThisKey="eventId", OtherKey="id", IsForeignKey=true)]
		public Event Event
		{
			get
			{
				return this._Event.Entity;
			}
			set
			{
				Event previousValue = this._Event.Entity;
				if (((previousValue != value) 
							|| (this._Event.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Event.Entity = null;
						previousValue.Photos.Remove(this);
					}
					this._Event.Entity = value;
					if ((value != null))
					{
						value.Photos.Add(this);
						this._eventId = value.id;
					}
					else
					{
						this._eventId = default(int);
					}
					this.SendPropertyChanged("Event");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tag")]
	public partial class Tag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private int _occurrence;
		
		private EntitySet<EventTag> _EventTags;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void OnoccurrenceChanging(int value);
    partial void OnoccurrenceChanged();
    #endregion
		
		public Tag()
		{
			this._EventTags = new EntitySet<EventTag>(new Action<EventTag>(this.attach_EventTags), new Action<EventTag>(this.detach_EventTags));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="VarChar(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_occurrence", DbType="Int NOT NULL")]
		public int occurrence
		{
			get
			{
				return this._occurrence;
			}
			set
			{
				if ((this._occurrence != value))
				{
					this.OnoccurrenceChanging(value);
					this.SendPropertyChanging();
					this._occurrence = value;
					this.SendPropertyChanged("occurrence");
					this.OnoccurrenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tag_EventTag", Storage="_EventTags", ThisKey="id", OtherKey="tag")]
		public EntitySet<EventTag> EventTags
		{
			get
			{
				return this._EventTags;
			}
			set
			{
				this._EventTags.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EventTags(EventTag entity)
		{
			this.SendPropertyChanging();
			entity.Tag1 = this;
		}
		
		private void detach_EventTags(EventTag entity)
		{
			this.SendPropertyChanging();
			entity.Tag1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Type")]
	public partial class Type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _name;
		
		private EntitySet<Organization> _Organizations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public Type()
		{
			this._Organizations = new EntitySet<Organization>(new Action<Organization>(this.attach_Organizations), new Action<Organization>(this.detach_Organizations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Type_Organization", Storage="_Organizations", ThisKey="name", OtherKey="type")]
		public EntitySet<Organization> Organizations
		{
			get
			{
				return this._Organizations;
			}
			set
			{
				this._Organizations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Organizations(Organization entity)
		{
			this.SendPropertyChanging();
			entity.Type1 = this;
		}
		
		private void detach_Organizations(Organization entity)
		{
			this.SendPropertyChanging();
			entity.Type1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _username;
		
		private string _password;
		
		private System.Data.Linq.Binary _profilePicture;
		
		private System.DateTime _registerDate;
		
		private int _userType;
		
		private EntityRef<Admin> _Admin;
		
		private EntitySet<UserUser> _UserUsers;
		
		private EntitySet<UserUser> _UserUsers1;
		
		private EntitySet<Comment> _Comments;
		
		private EntitySet<Event> _Events;
		
		private EntityRef<Individual> _Individual;
		
		private EntitySet<Notification> _Notifications;
		
		private EntitySet<Notification> _Notifications1;
		
		private EntityRef<Organization> _Organization;
		
		private EntitySet<UserEventAttendant> _UserEventAttendants;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnprofilePictureChanging(System.Data.Linq.Binary value);
    partial void OnprofilePictureChanged();
    partial void OnregisterDateChanging(System.DateTime value);
    partial void OnregisterDateChanged();
    partial void OnuserTypeChanging(int value);
    partial void OnuserTypeChanged();
    #endregion
		
		public User()
		{
			this._Admin = default(EntityRef<Admin>);
			this._UserUsers = new EntitySet<UserUser>(new Action<UserUser>(this.attach_UserUsers), new Action<UserUser>(this.detach_UserUsers));
			this._UserUsers1 = new EntitySet<UserUser>(new Action<UserUser>(this.attach_UserUsers1), new Action<UserUser>(this.detach_UserUsers1));
			this._Comments = new EntitySet<Comment>(new Action<Comment>(this.attach_Comments), new Action<Comment>(this.detach_Comments));
			this._Events = new EntitySet<Event>(new Action<Event>(this.attach_Events), new Action<Event>(this.detach_Events));
			this._Individual = default(EntityRef<Individual>);
			this._Notifications = new EntitySet<Notification>(new Action<Notification>(this.attach_Notifications), new Action<Notification>(this.detach_Notifications));
			this._Notifications1 = new EntitySet<Notification>(new Action<Notification>(this.attach_Notifications1), new Action<Notification>(this.detach_Notifications1));
			this._Organization = default(EntityRef<Organization>);
			this._UserEventAttendants = new EntitySet<UserEventAttendant>(new Action<UserEventAttendant>(this.attach_UserEventAttendants), new Action<UserEventAttendant>(this.detach_UserEventAttendants));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_profilePicture", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary profilePicture
		{
			get
			{
				return this._profilePicture;
			}
			set
			{
				if ((this._profilePicture != value))
				{
					this.OnprofilePictureChanging(value);
					this.SendPropertyChanging();
					this._profilePicture = value;
					this.SendPropertyChanged("profilePicture");
					this.OnprofilePictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_registerDate", DbType="DateTime NOT NULL")]
		public System.DateTime registerDate
		{
			get
			{
				return this._registerDate;
			}
			set
			{
				if ((this._registerDate != value))
				{
					this.OnregisterDateChanging(value);
					this.SendPropertyChanging();
					this._registerDate = value;
					this.SendPropertyChanged("registerDate");
					this.OnregisterDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userType", DbType="Int NOT NULL")]
		public int userType
		{
			get
			{
				return this._userType;
			}
			set
			{
				if ((this._userType != value))
				{
					this.OnuserTypeChanging(value);
					this.SendPropertyChanging();
					this._userType = value;
					this.SendPropertyChanged("userType");
					this.OnuserTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Admin", Storage="_Admin", ThisKey="username", OtherKey="username", IsUnique=true, IsForeignKey=false)]
		public Admin Admin
		{
			get
			{
				return this._Admin.Entity;
			}
			set
			{
				Admin previousValue = this._Admin.Entity;
				if (((previousValue != value) 
							|| (this._Admin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Admin.Entity = null;
						previousValue.User = null;
					}
					this._Admin.Entity = value;
					if ((value != null))
					{
						value.User = this;
					}
					this.SendPropertyChanged("Admin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserUser", Storage="_UserUsers", ThisKey="username", OtherKey="username1")]
		public EntitySet<UserUser> UserUsers
		{
			get
			{
				return this._UserUsers;
			}
			set
			{
				this._UserUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserUser1", Storage="_UserUsers1", ThisKey="username", OtherKey="username2")]
		public EntitySet<UserUser> UserUsers1
		{
			get
			{
				return this._UserUsers1;
			}
			set
			{
				this._UserUsers1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Comment", Storage="_Comments", ThisKey="username", OtherKey="author")]
		public EntitySet<Comment> Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				this._Comments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Event", Storage="_Events", ThisKey="username", OtherKey="username")]
		public EntitySet<Event> Events
		{
			get
			{
				return this._Events;
			}
			set
			{
				this._Events.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Individual", Storage="_Individual", ThisKey="username", OtherKey="username", IsUnique=true, IsForeignKey=false)]
		public Individual Individual
		{
			get
			{
				return this._Individual.Entity;
			}
			set
			{
				Individual previousValue = this._Individual.Entity;
				if (((previousValue != value) 
							|| (this._Individual.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Individual.Entity = null;
						previousValue.User = null;
					}
					this._Individual.Entity = value;
					if ((value != null))
					{
						value.User = this;
					}
					this.SendPropertyChanged("Individual");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Notification", Storage="_Notifications", ThisKey="username", OtherKey="receiver")]
		public EntitySet<Notification> Notifications
		{
			get
			{
				return this._Notifications;
			}
			set
			{
				this._Notifications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Notification1", Storage="_Notifications1", ThisKey="username", OtherKey="sender")]
		public EntitySet<Notification> Notifications1
		{
			get
			{
				return this._Notifications1;
			}
			set
			{
				this._Notifications1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Organization", Storage="_Organization", ThisKey="username", OtherKey="username", IsUnique=true, IsForeignKey=false)]
		public Organization Organization
		{
			get
			{
				return this._Organization.Entity;
			}
			set
			{
				Organization previousValue = this._Organization.Entity;
				if (((previousValue != value) 
							|| (this._Organization.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organization.Entity = null;
						previousValue.User = null;
					}
					this._Organization.Entity = value;
					if ((value != null))
					{
						value.User = this;
					}
					this.SendPropertyChanged("Organization");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserEventAttendant", Storage="_UserEventAttendants", ThisKey="username", OtherKey="username")]
		public EntitySet<UserEventAttendant> UserEventAttendants
		{
			get
			{
				return this._UserEventAttendants;
			}
			set
			{
				this._UserEventAttendants.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserUsers(UserUser entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserUsers(UserUser entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_UserUsers1(UserUser entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_UserUsers1(UserUser entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_Comments(Comment entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Comments(Comment entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Events(Event entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Events(Event entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Notifications(Notification entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Notifications(Notification entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Notifications1(Notification entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_Notifications1(Notification entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_UserEventAttendants(UserEventAttendant entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserEventAttendants(UserEventAttendant entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserEventAttendants")]
	public partial class UserEventAttendant : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _username;
		
		private int _event;
		
		private int _attend;
		
		private EntityRef<Event> _Event1;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OneventChanging(int value);
    partial void OneventChanged();
    partial void OnattendChanging(int value);
    partial void OnattendChanged();
    #endregion
		
		public UserEventAttendant()
		{
			this._Event1 = default(EntityRef<Event>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="event", Storage="_event", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int @event
		{
			get
			{
				return this._event;
			}
			set
			{
				if ((this._event != value))
				{
					if (this._Event1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OneventChanging(value);
					this.SendPropertyChanging();
					this._event = value;
					this.SendPropertyChanged("@event");
					this.OneventChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_attend", DbType="Int NOT NULL")]
		public int attend
		{
			get
			{
				return this._attend;
			}
			set
			{
				if ((this._attend != value))
				{
					this.OnattendChanging(value);
					this.SendPropertyChanging();
					this._attend = value;
					this.SendPropertyChanged("attend");
					this.OnattendChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Event_UserEventAttendant", Storage="_Event1", ThisKey="event", OtherKey="id", IsForeignKey=true)]
		public Event Event1
		{
			get
			{
				return this._Event1.Entity;
			}
			set
			{
				Event previousValue = this._Event1.Entity;
				if (((previousValue != value) 
							|| (this._Event1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Event1.Entity = null;
						previousValue.UserEventAttendants.Remove(this);
					}
					this._Event1.Entity = value;
					if ((value != null))
					{
						value.UserEventAttendants.Add(this);
						this._event = value.id;
					}
					else
					{
						this._event = default(int);
					}
					this.SendPropertyChanged("Event1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserEventAttendant", Storage="_User", ThisKey="username", OtherKey="username", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserEventAttendants.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserEventAttendants.Add(this);
						this._username = value.username;
					}
					else
					{
						this._username = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class followerListResult
	{
		
		private string _username;
		
		private System.Data.Linq.Binary _profilePicture;
		
		private int _userType;
		
		public followerListResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this._username = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_profilePicture", DbType="Image")]
		public System.Data.Linq.Binary profilePicture
		{
			get
			{
				return this._profilePicture;
			}
			set
			{
				if ((this._profilePicture != value))
				{
					this._profilePicture = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userType", DbType="Int NOT NULL")]
		public int userType
		{
			get
			{
				return this._userType;
			}
			set
			{
				if ((this._userType != value))
				{
					this._userType = value;
				}
			}
		}
	}
	
	public partial class followingListResult
	{
		
		private string _username;
		
		private System.Data.Linq.Binary _profilePicture;
		
		private int _userType;
		
		public followingListResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this._username = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_profilePicture", DbType="Image")]
		public System.Data.Linq.Binary profilePicture
		{
			get
			{
				return this._profilePicture;
			}
			set
			{
				if ((this._profilePicture != value))
				{
					this._profilePicture = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userType", DbType="Int NOT NULL")]
		public int userType
		{
			get
			{
				return this._userType;
			}
			set
			{
				if ((this._userType != value))
				{
					this._userType = value;
				}
			}
		}
	}
	
	public partial class getCommentsResult
	{
		
		private string _content;
		
		private System.Nullable<int> _eventId;
		
		private string _author;
		
		public getCommentsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_content", DbType="NVarChar(1024) NOT NULL", CanBeNull=false)]
		public string content
		{
			get
			{
				return this._content;
			}
			set
			{
				if ((this._content != value))
				{
					this._content = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eventId", DbType="Int")]
		public System.Nullable<int> eventId
		{
			get
			{
				return this._eventId;
			}
			set
			{
				if ((this._eventId != value))
				{
					this._eventId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_author", DbType="VarChar(32)")]
		public string author
		{
			get
			{
				return this._author;
			}
			set
			{
				if ((this._author != value))
				{
					this._author = value;
				}
			}
		}
	}
	
	public partial class getInterestResult
	{
		
		private string _name;
		
		private string _description;
		
		private System.Data.Linq.Binary _thumbnail;
		
		public getInterestResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(32) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this._name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(1024)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this._description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_thumbnail", DbType="Image")]
		public System.Data.Linq.Binary thumbnail
		{
			get
			{
				return this._thumbnail;
			}
			set
			{
				if ((this._thumbnail != value))
				{
					this._thumbnail = value;
				}
			}
		}
	}
	
	public partial class listInvitedEventsResult
	{
		
		private int _id;
		
		private System.DateTime _beginTime;
		
		private System.DateTime _endTime;
		
		private string _description;
		
		private System.Data.Linq.Binary _thumbnail;
		
		private string _title;
		
		private int _location;
		
		private string _username;
		
		private System.Nullable<System.DateTime> _publishDate;
		
		public listInvitedEventsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL")]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_beginTime", DbType="DateTime NOT NULL")]
		public System.DateTime beginTime
		{
			get
			{
				return this._beginTime;
			}
			set
			{
				if ((this._beginTime != value))
				{
					this._beginTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_endTime", DbType="DateTime NOT NULL")]
		public System.DateTime endTime
		{
			get
			{
				return this._endTime;
			}
			set
			{
				if ((this._endTime != value))
				{
					this._endTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(1024) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this._description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_thumbnail", DbType="Image")]
		public System.Data.Linq.Binary thumbnail
		{
			get
			{
				return this._thumbnail;
			}
			set
			{
				if ((this._thumbnail != value))
				{
					this._thumbnail = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this._title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_location", DbType="Int NOT NULL")]
		public int location
		{
			get
			{
				return this._location;
			}
			set
			{
				if ((this._location != value))
				{
					this._location = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this._username = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_publishDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> publishDate
		{
			get
			{
				return this._publishDate;
			}
			set
			{
				if ((this._publishDate != value))
				{
					this._publishDate = value;
				}
			}
		}
	}
	
	public partial class listInvitedPeopleResult
	{
		
		private string _username;
		
		private int _event;
		
		private int _attend;
		
		private string _username1;
		
		private string _password;
		
		private System.Data.Linq.Binary _profilePicture;
		
		private System.DateTime _registerDate;
		
		private int _userType;
		
		public listInvitedPeopleResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this._username = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="event", Storage="_event", DbType="Int NOT NULL")]
		public int @event
		{
			get
			{
				return this._event;
			}
			set
			{
				if ((this._event != value))
				{
					this._event = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_attend", DbType="Int NOT NULL")]
		public int attend
		{
			get
			{
				return this._attend;
			}
			set
			{
				if ((this._attend != value))
				{
					this._attend = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username1", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string username1
		{
			get
			{
				return this._username1;
			}
			set
			{
				if ((this._username1 != value))
				{
					this._username1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this._password = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_profilePicture", DbType="Image")]
		public System.Data.Linq.Binary profilePicture
		{
			get
			{
				return this._profilePicture;
			}
			set
			{
				if ((this._profilePicture != value))
				{
					this._profilePicture = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_registerDate", DbType="DateTime NOT NULL")]
		public System.DateTime registerDate
		{
			get
			{
				return this._registerDate;
			}
			set
			{
				if ((this._registerDate != value))
				{
					this._registerDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userType", DbType="Int NOT NULL")]
		public int userType
		{
			get
			{
				return this._userType;
			}
			set
			{
				if ((this._userType != value))
				{
					this._userType = value;
				}
			}
		}
	}
	
	public partial class searchInterestFromNameResult
	{
		
		private string _name;
		
		private string _description;
		
		private System.Data.Linq.Binary _thumbnail;
		
		public searchInterestFromNameResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(32) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this._name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(1024)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this._description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_thumbnail", DbType="Image")]
		public System.Data.Linq.Binary thumbnail
		{
			get
			{
				return this._thumbnail;
			}
			set
			{
				if ((this._thumbnail != value))
				{
					this._thumbnail = value;
				}
			}
		}
	}
	
	public partial class searchTopTagsResult
	{
		
		private string _id;
		
		private int _occurrence;
		
		public searchTopTagsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_occurrence", DbType="Int NOT NULL")]
		public int occurrence
		{
			get
			{
				return this._occurrence;
			}
			set
			{
				if ((this._occurrence != value))
				{
					this._occurrence = value;
				}
			}
		}
	}
	
	public partial class searchUserFromInterestResult
	{
		
		private string _username;
		
		private string _password;
		
		private System.Data.Linq.Binary _profilePicture;
		
		private System.DateTime _registerDate;
		
		private int _userType;
		
		public searchUserFromInterestResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this._username = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this._password = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_profilePicture", DbType="Image")]
		public System.Data.Linq.Binary profilePicture
		{
			get
			{
				return this._profilePicture;
			}
			set
			{
				if ((this._profilePicture != value))
				{
					this._profilePicture = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_registerDate", DbType="DateTime NOT NULL")]
		public System.DateTime registerDate
		{
			get
			{
				return this._registerDate;
			}
			set
			{
				if ((this._registerDate != value))
				{
					this._registerDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userType", DbType="Int NOT NULL")]
		public int userType
		{
			get
			{
				return this._userType;
			}
			set
			{
				if ((this._userType != value))
				{
					this._userType = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
